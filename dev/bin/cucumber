#!/usr/bin/env ruby
# frozen_string_literal: true

#
# This file was generated by Bundler.
#
# The application 'cucumber' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require "pathname"
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../../Gemfile",
  Pathname.new(__FILE__).realpath)

bundle_binstub = File.expand_path("../bundle", __FILE__)

if File.file?(bundle_binstub)
  if File.read(bundle_binstub, 300) =~ /This file was generated by Bundler/
    load(bundle_binstub)
  else
    abort("Your `bin/bundle` was not generated by Bundler, so this binstub cannot run.
Replace `bin/bundle` by running `bundle binstubs bundler --force`, then run this command again.")
  end
end

require "rubygems"
require "bundler/setup"

# Edits
# ============================================================================

require 'yaml'
require 'active_support/core_ext/object/try'

m = Module.new do
  GEMROOT = Pathname.new( __dir__ ).join( '../..' ).expand_path
  
  def self.relative_path_for gemroot_relative_path
    GEMROOT.
      join( gemroot_relative_path ).
      relative_path_from( Pathname.getwd ).to_s
  end
  
  def self.last_failed_files
    status_path = GEMROOT.join 'tmp', '.cucumber_status.yaml'
    status = YAML.load status_path.read
    status[ "failures" ]
  rescue
    nil
  end
  
  def self.last_failed_file
    last_failed_files&.[]( 0 )
  end
end

arg_aliases = {
  '--desc' => -> { m.relative_path_for 'features/lib/nrser/described' },
  '--last-failed-files' => ->{ m.last_failed_files },
  '--last-failed-file' => ->{ m.last_failed_file },
}

if ARGV.length == 0
  # Run everything when ARGV is empty
  ARGV[ 0 ] = '--format'
  ARGV[ 1 ] = 'progress'
  ARGV[ 2 ] = m.relative_path_for 'features/'
  
else
  ARGV.each_with_index { |arg, index|
    if ( proc = arg_aliases[ arg ] )
      ARGV[ index ] = proc.call
      ARGV.flatten!
      ARGV.compact!
      puts "EXPANDED arg alias: #{ arg } => #{ ARGV[ index ].inspect }\n\n"
    end
  }
  
end

# END Edits ******************************************************************

load Gem.bin_path("cucumber", "cucumber")
